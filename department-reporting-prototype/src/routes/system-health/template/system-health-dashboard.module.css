/* System Health Dashboard Styles - Story 2.7 Implementation */

.healthDashboard {
  display: flex;
  flex-direction: column;
  gap: 24px;
  padding: 24px;
  max-width: 1400px;
  margin: 0 auto;
}

/* Auto Refresh Control */
.autoRefreshControl {
  display: flex;
  align-items: center;
  gap: 8px;
}

/* Status Overview */
.statusOverview {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.statusHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.statusIndicator {
  padding: 8px 16px;
  border-radius: var(--mfui-border-radius-medium);
  font-weight: 600;
  font-size: 14px;
}

.statusIndicator.success {
  background-color: var(--mfui-color-semantic-success-background);
  color: var(--mfui-color-semantic-success);
}

.statusIndicator.warning {
  background-color: var(--mfui-color-semantic-warning-background);
  color: var(--mfui-color-semantic-warning);
}

.statusIndicator.error {
  background-color: var(--mfui-color-semantic-error-background);
  color: var(--mfui-color-semantic-error);
}

/* Metrics Grid */
.metricsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
}

.metricCard {
  display: flex;
  flex-direction: column;
  gap: 12px;
  padding: 16px;
  border: 1px solid var(--mfui-color-border-primary);
  border-radius: var(--mfui-border-radius-medium);
  background-color: var(--mfui-color-background-primary);
}

.metricValue {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.metricTarget {
  color: var(--mfui-color-text-secondary);
  font-size: 14px;
}

/* Alerts Section */
.alertsSection {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.alertsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.alerts {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

/* Performance Targets */
.targetsSection {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.targetsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.statusBadge {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 4px 8px;
  border-radius: var(--mfui-border-radius-small);
  font-size: 14px;
  font-weight: 500;
}

.statusBadge.success {
  background-color: var(--mfui-color-semantic-success-background);
  color: var(--mfui-color-semantic-success);
}

.statusBadge.warning {
  background-color: var(--mfui-color-semantic-warning-background);
  color: var(--mfui-color-semantic-warning);
}

.statusBadge.error {
  background-color: var(--mfui-color-semantic-error-background);
  color: var(--mfui-color-semantic-error);
}

.statusIcon {
  font-size: 12px;
  font-weight: bold;
}

.statusText {
  text-transform: uppercase;
}

/* Optimization Recommendations */
.recommendationsSection {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.recommendations {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.recommendation {
  display: flex;
  align-items: flex-start;
  gap: 12px;
  padding: 16px;
  background-color: var(--mfui-color-background-secondary);
  border-radius: var(--mfui-border-radius-medium);
  border-left: 4px solid var(--mfui-color-semantic-info);
}

.recommendationIcon {
  font-size: 20px;
  flex-shrink: 0;
  margin-top: 2px;
}

/* Status Colors */
.success {
  color: var(--mfui-color-semantic-success);
  font-weight: 500;
}

.warning {
  color: var(--mfui-color-semantic-warning);
  font-weight: 500;
}

.error {
  color: var(--mfui-color-semantic-error);
  font-weight: 500;
}

.neutral {
  color: var(--mfui-color-text-primary);
  font-weight: 500;
}

/* Update Info */
.updateInfo {
  display: flex;
  justify-content: center;
  padding: 16px;
  background-color: var(--mfui-color-background-secondary);
  border-radius: var(--mfui-border-radius-medium);
  margin-top: auto;
}

.updateText {
  color: var(--mfui-color-text-secondary);
  font-size: 14px;
}

.autoRefreshIndicator {
  color: var(--mfui-color-semantic-info);
  font-weight: 500;
}

/* Mobile-First Responsive Design (Story 2.6) */
@media (max-width: 768px) {
  .healthDashboard {
    padding: 16px;
    gap: 16px;
  }

  .metricsGrid {
    grid-template-columns: 1fr;
  }

  .statusHeader,
  .alertsHeader,
  .targetsHeader {
    flex-direction: column;
    gap: 12px;
    align-items: stretch;
  }

  .autoRefreshControl {
    justify-content: space-between;
  }

  .recommendation {
    flex-direction: column;
    align-items: stretch;
    text-align: left;
  }

  .recommendationIcon {
    align-self: flex-start;
  }

  .statusBadge {
    justify-content: center;
  }

  .updateInfo {
    text-align: center;
  }
}

/* Touch Optimization (Story 2.6) */
@media (hover: none) and (pointer: coarse) {
  .healthDashboard {
    gap: 20px;
  }
  
  /* Ensure minimum touch target size of 44px */
  .metricCard {
    min-height: 44px;
    padding: 16px;
  }
  
  .statusBadge {
    min-height: 32px;
    padding: 8px 12px;
  }
  
  .recommendation {
    min-height: 44px;
    padding: 16px;
  }
}

/* Performance Optimization (Story 2.7) */
.healthDashboard * {
  /* Enable GPU acceleration for smooth updates */
  will-change: auto;
}

.metricsGrid,
.targetsSection,
.recommendationsSection {
  /* Optimize rendering for real-time updates */
  contain: layout style paint;
}

/* Real-time update animations */
.metricValue {
  transition: all 0.3s ease;
}

.statusIndicator {
  transition: all 0.3s ease;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.8; }
  100% { opacity: 1; }
}

.statusIndicator.error {
  animation: alertPulse 1s infinite;
}

@keyframes alertPulse {
  0% { opacity: 1; }
  50% { opacity: 0.6; }
  100% { opacity: 1; }
}

/* 500+ user capacity indicators */
.metricCard[data-critical="true"] {
  border-color: var(--mfui-color-semantic-error);
  box-shadow: 0 0 8px rgba(var(--mfui-color-semantic-error-rgb), 0.2);
}

.metricCard[data-warning="true"] {
  border-color: var(--mfui-color-semantic-warning);
  box-shadow: 0 0 8px rgba(var(--mfui-color-semantic-warning-rgb), 0.2);
}

/* Auto-refresh indicator */
.autoRefreshIndicator {
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}